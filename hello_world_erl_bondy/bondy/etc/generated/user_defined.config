[{riak_sysmon,
     [{busy_dist_port,true},
      {busy_port,true},
      {port_limit,2},
      {process_limit,30},
      {gc_ms_limit,0},
      {schedule_ms_limit,0},
      {heap_word_limit,20055500}]},
 {eleveldb,
     [{whole_file_expiry,true},
      {expiry_minutes,unlimited},
      {expiry_enabled,false},
      {cache_object_warming,false},
      {compression_enabled,true},
      {fadvise_willneed,false},
      {eleveldb_threads,71},
      {verify_compaction,true},
      {verify_checksums,true},
      {block_size_steps,16},
      {block_restart_interval,16},
      {sst_block_size,4096},
      {block_cache_threshold,33554432},
      {use_bloomfilter,true},
      {write_buffer_size_max,62914560},
      {write_buffer_size_min,31457280},
      {limited_developer_mem,false},
      {sync,false},
      {total_leveldb_mem_percent,20},
      {delete_threshold,1000},
      {tiered_slow_level,0}]},
 {bondy,
     [{oauth2,
          [{refresh_token_length,40},
           {refresh_token_duration,2592000},
           {code_grant_duration,600},
           {client_credentials_grant_duration,900},
           {password_grant_duration,900},
           {config_file,"/bondy/etc/oauth2_config.json"}]},
      {bridge_relay,[{forward,#{ack => false,retransmission => false}}]},
      {bridge_relay_tls,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {tls_opts,
               [{cacertfile,"/bondy/etc/cacert.pem"},
                {keyfile,"/bondy/etc/key.pem"},
                {certfile,"/bondy/etc/keycert.pem"},
                {versions,['tlsv1.3']}]},
           {max_frame_size,infinity},
           {hibernate,idle},
           {idle_timeout,28800000},
           {ping,
               [{max_attempts,2},
                {timeout,10000},
                {idle_timeout,20000},
                {enabled,true}]},
           {socket_opts,[{nodelay,true},{keepalive,true}]},
           {backlog,1024},
           {max_connections,100000},
           {acceptors_pool_size,200},
           {port,18093},
           {enabled,false},
           {ip_version,inet}]},
      {bridge_relay_tcp,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {max_frame_size,infinity},
           {auth_timeout,5000},
           {hibernate,idle},
           {idle_timeout,28800000},
           {ping,
               [{max_attempts,2},
                {timeout,10000},
                {idle_timeout,20000},
                {enabled,true}]},
           {socket_opts,[{nodelay,true},{keepalive,true}]},
           {backlog,1024},
           {max_connections,100000},
           {acceptors_pool_size,200},
           {port,18092},
           {enabled,false},
           {ip_version,inet}]},
      {platform_log_dir,"/bondy/log"},
      {platform_tmp_dir,"/bondy/tmpXX"},
      {platform_data_dir,"/bondy/data"},
      {platform_lib_dir,"/bondy/lib"},
      {channels,
          [{wamp_relay,[{compression,false},{parallelism,2}]},
           {partisan_membership,[{compression,true},{parallelism,1}]},
           {data,[{compression,false},{parallelism,2}]},
           {undefined,[{compression,false},{parallelism,1}]}]},
      {automatic_leave,true},
      {wamp_tls,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {tls_opts,
               [{cacertfile,"/bondy/etc/cacert.pem"},
                {keyfile,"/bondy/etc/key.pem"},
                {certfile,"/bondy/etc/keycert.pem"},
                {versions,['tlsv1.3']}]},
           {idle_timeout,28800000},
           {ping,
               [{max_attempts,3},
                {timeout,10000},
                {interval,30000},
                {enabled,true}]},
           {socket_opts,[{nodelay,true},{keepalive,true}]},
           {backlog,1024},
           {max_connections,100000},
           {acceptors_pool_size,200},
           {port,18085},
           {enabled,false},
           {ip_version,inet}]},
      {wamp_tcp,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {idle_timeout,28800000},
           {ping,
               [{max_attempts,2},
                {timeout,10000},
                {idle_timeout,20000},
                {enabled,true}]},
           {socket_opts,[{nodelay,true},{keepalive,true}]},
           {backlog,1024},
           {max_connections,10000},
           {acceptors_pool_size,100},
           {port,18082},
           {enabled,true},
           {ip_version,inet}]},
      {wamp_websocket,
          [{deflate_opts,
               [{client_context_takeover,takeover},
                {server_context_takeover,takeover},
                {strategy,default},
                {level,5},
                {mem_level,8},
                {server_max_window_bits,11},
                {client_max_window_bits,11}]},
           {compress,false},
           {max_frame_size,infinity},
           {idle_timeout,28800000},
           {ping,
               [{max_attempts,3},
                {timeout,10000},
                {idle_timeout,20000},
                {enabled,true}]}]},
      {wamp_serializers,[{bert,4},{erl,15}]},
      {request_timeout,20000},
      {wamp_message_retention,
          [{default_ttl,0},
           {max_message_size,65536},
           {max_memory,1073741824},
           {max_messages,1000000},
           {storage_type,ram},
           {enabled,false}]},
      {wamp_max_call_timeout,86400000},
      {wamp_call_timeout,30000},
      {wamp_connection_lifetime,session},
      {api_gateway_https,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {socket_opts,
               [{cacertfile,"/bondy/etc/cacert.pem"},
                {keyfile,"/bondy/etc/key.pem"},
                {certfile,"/bondy/etc/keycert.pem"},
                {nodelay,true},
                {keepalive,false},
                {versions,['tlsv1.3']}]},
           {backlog,4096},
           {max_connections,500000},
           {acceptors_pool_size,200},
           {port,18083},
           {enabled,false},
           {ip_version,inet}]},
      {api_gateway_http,
          [{proxy_protocol,[{mode,relaxed},{enabled,true}]},
           {socket_opts,[{nodelay,true},{keepalive,false}]},
           {backlog,4096},
           {max_connections,200000},
           {acceptors_pool_size,200},
           {port,18080},
           {enabled,true},
           {ip_version,inet}]},
      {api_gateway,[{config_file,"/bondy/etc/api_gateway_config.json"}]},
      {admin_api_https,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {socket_opts,
               [{cacertfile,"/bondy/etc/cacert.pem"},
                {keyfile,"/bondy/etc/key.pem"},
                {certfile,"/bondy/etc/keycert.pem"},
                {nodelay,true},
                {keepalive,false},
                {versions,['tlsv1.3']}]},
           {backlog,1024},
           {max_connections,250000},
           {acceptors_pool_size,200},
           {port,18084},
           {enabled,false},
           {ip_version,inet}]},
      {admin_api_http,
          [{proxy_protocol,[{mode,relaxed},{enabled,false}]},
           {socket_opts,[{nodelay,true},{keepalive,false}]},
           {backlog,1024},
           {max_connections,10000},
           {acceptors_pool_size,100},
           {port,18081},
           {enabled,true},
           {ip_version,inet}]},
      {registry,
          [{partition_spawn_opts,[{message_queue_data,off_heap}]},
           {partitions,32}]},
      {session_manager_pool,[{size,50}]},
      {router_pool,[{capacity,100000},{size,8},{type,transient}]},
      {load_regulation_enabled,true},
      {security,
          [{ticket,
               [{allow_not_found,true},
                {client_sso,[{persistence,true}]},
                {client_local,[{persistence,true}]},
                {sso,[{persistence,false}]},
                {local,[{persistence,false}]},
                {max_expiry_time_secs,2592000},
                {expiry_time_secs,1296000},
                {authmethods,
                    [<<"cryptosign">>,<<"password">>,<<"ticket">>,<<"tls">>,
                     <<"trust">>,<<"wamp-scram">>,<<"wampcra">>]}]},
           {password,
               [{cra,[{kdf,pbkdf2}]},
                {scram,[{kdf,pbkdf2}]},
                {protocol_upgrade_enabled,false},
                {protocol,cra},
                {min_length,6},
                {max_length,254},
                {pbkdf2,[{iterations,10000}]},
                {argon2id13,[{iterations,moderate},{memory,interactive}]}]},
           {allow_anonymous_user,true},
           {automatically_create_realms,false},
           {config_file,"/bondy/etc/security_config.json"}]},
      {router,[{forward,#{ack => false,retransmission => false}}]},
      {shutdown_grace_period,30},
      {bridges,#{}}]},
 {kernel,
     [{logger_level,info},
      {logger,
          [{handler,default,logger_std_h,
               #{config =>
                     #{burst_limit_enable => true,
                       burst_limit_max_count => 500,
                       burst_limit_window_time => 1000,drop_mode_qlen => 200,
                       filesync_repeat_interval => no_repeat,
                       flush_qlen => 1000,overload_kill_enable => false,
                       overload_kill_mem_size => 3000000,
                       overload_kill_qlen => 20000,
                       overload_kill_restart_after => 5000,
                       sync_mode_qlen => 10,type => standard_io},
                 filter_default => stop,
                 filters =>
                     [{progress,{fun logger_filters:progress/2,stop}},
                      {remote_gl,{fun logger_filters:remote_gl/2,stop}},
                      {no_domain,
                          {fun logger_filters:domain/2,{log,undefined,[]}}},
                      {otp,
                          {fun logger_filters:domain/2,
                           {log,equal,[otp,sasl]}}},
                      {bondy_audit,
                          {fun logger_filters:domain/2,
                           {log,equal,[bondy_audit]}}},
                      {ssl,{fun logger_filters:domain/2,{stop,equal,[ssl]}}}],
                 formatter =>
                     {bondy_logger_formatter,
                         #{colored => true,colored_alert => "\e[1;45m",
                           colored_critical => "\e[1;35m",
                           colored_debug => "\e[0;38m",
                           colored_emergency => "\e[1;41;1m",
                           colored_error => "\e[1;31m",
                           colored_info => "\e[1;37m",
                           colored_notice => "\e[1;36m",
                           colored_warning => "\e[1;33m",map_depth => 3,
                           template =>
                               [colored_start,"when=",time," level=",level,
                                {pid,[" pid=",pid],[]},
                                " at=",mfa,":",line,
                                {{msg,description},
                                 [" description=",description],
                                 []},
                                colored_end,
                                {{msg,reason},[" reason=",reason],[]},
                                {id,[" id=",id],[]},
                                {span_id,[" span_id=",span_id],[]},
                                {trace_id,[" trace_id=",trace_id],[]},
                                {node,[" node=",node],[]},
                                {router_vsn,[" router_vsn=",router_vsn],[]},
                                {realm,[" realm=",realm],[]},
                                {agent,[" agent=",agent],[]},
                                {authmethod,[" authmethod=",authmethod],[]},
                                {session_id,[" session_id=",session_id],[]},
                                {protocol_session_id,
                                    [" protocol_session_id=",
                                     protocol_session_id],
                                    []},
                                {protocol,[" protocol=",protocol],[]},
                                {transport,[" transport=",transport],[]},
                                {peername,[" peername=",peername],[]},
                                {listener,[" listener=",listener],[]},
                                {serializer,[" serializer=",serializer],[]},
                                " ",msg,
                                {version,[" version=",version],[]},
                                "\n"],
                           term_depth => 50,time_designator => "T",
                           time_offset => 0}},
                 level => info}}]}]},
 {bondy_broker_bridge,
     [{bridges,
          [{bondy_sendgrid_bridge,[{adapter,sendgrid},{enabled,false}]},
           {bondy_mailgun_bridge,[{adapter,mailgun2},{enabled,false}]},
           {bondy_aws_sns_bridge,[{enabled,false}]},
           {bondy_kafka_bridge,[{enabled,false},{clients,[]}]}]}]},
 {plum_db,
     [{aae_exchange_on_cluster_join,true},
      {hashtree_ttl,604800},
      {hashtree_timer,10000},
      {aae_enabled,true},
      {data_exchange_timeout,60000},
      {data_dir,"/bondy/data"},
      {store_open_retries_delay,2000},
      {store_open_retry_limit,30},
      {shard_by,prefix},
      {partitions,16},
      {wait_for_aae_exchange,false},
      {wait_for_hashtrees,true},
      {wait_for_partitions,false}]},
 {partisan,
     [{tls_client_options,[{verify,verify_none},{versions,['tlsv1.3']}]},
      {tls_server_options,[{verify,verify_none},{versions,['tlsv1.3']}]},
      {tls,false},
      {peer_discovery,
          [{timeout,5000},
           {polling_interval,10000},
           {initial_delay,30000},
           {enabled,true},
           {type,partisan_peer_discovery_dns},
           {config,
               #{node_basename => <<"bondy">>,
                 query => <<"bondy.message-brokers.svc.cluster.local">>,
                 record_type => <<"srv">>}}]},
      {exchange_tick_period,10000},
      {lazy_tick_period,1000},
      {parallelism,1},
      {peer_port,18086},
      {peer_service_manager,partisan_pluggable_peer_service_manager}]},
 {wamp,[{uri_strictness,loose}]}].
